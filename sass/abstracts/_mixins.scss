@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/* 
0 - 600px: Phone
600 - 900px: tablet portrait
900 - 1200: tablet landscape
1200 - 1800: is where normal styles apply
1800+ : big desktop

@mixin respond-phone {
  @media(max-width: 600px) {@content}
  // Here content is uesd, so that if we want to apply this media query in any scss file then we can insert any property or any content we want. that's what {content} property specifies
  also, this way is the simplest way to do things/ to set media queries
}

breakpoint argument choices
- Phone
- tab portrait
- tab landscape 
- big deskop

1em = 16px
In media queries em and rem doesn't more relate to font-size instead of it, it relates to its default size; that is 16px

*/

// Now here, we'll use some function kinda thing, if you are familiar with any programming language then its good other-wise its good too. you'll be learning things
// Here, {$breakpoint} act as a function means, we have to parse value from it to make it working.
// Phone, tab-port, tab-land, big-desktop act as values.

@mixin respond-phone {
  @media (max-width: 600px) {
    @content;
  }
}

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      @content;
    }
  } // 600px
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      @content;
    }
  } // 900px
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      @content;
    }
  } // 1200px
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) {
      @content;
    }
  } // 1800px
}
